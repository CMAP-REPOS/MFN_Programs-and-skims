library(tidyverse)
library(ggplot2)
library(data.table)
library(reshape2)
library(stringr)
options(scipen = 9999999, digits = 6)
#Define paths and variables####
#test = "_test1_1.22_base"           ## -- version of the MFN to test output
#base = "_baseCopy_no140"
#folder = "S:/AdminGroups/ResearchAnalysis/kcc/FY25/MFN/proUpdate/finalGDB/2_test_batchin_in_emme/Meso_Freight_Skim_Setup_FY19"
#testPath = paste("S:/AdminGroups/ResearchAnalysis/kcc/FY25/MFN/proUpdate/finalGDB/3_finalRuns/Scenario1_noLogisics140/Meso_Freight_Skim_Setup_FY19_base")
#basePath = paste(folder, base, sep = "")
#testPath = "S:/AdminGroups/ResearchAnalysis/kcc/FY25/MFN/proUpdate/finalGDB/3_finalRuns/Scenario1_noLogisics140/Meso_Freight_Skim_Setup_FY19_base"
testPath = "S:/AdminGroups/ResearchAnalysis/kcc/FY25/MFN/proUpdate/finalGDB/5_cleanup_processing/test_copies/Meso_Freight_Skim_Setup_FY19_base_reworkSAS2"
basePath = "S:/AdminGroups/ResearchAnalysis/kcc/FY25/MFN/proUpdate/finalGDB/3_finalRuns/Scenario1_noLogisics140/Meso_Freight_Skim_Setup_FY19_base"
hwy_matrixIDs = c(29, 31, 32, 33, 34, 40, 41, 61:66)
pipe_matrixIDs = c(71:76, 80)
maxZn <- 300					## -- number of zones Emmebank is dimensioned for
maxOb <- maxZn * maxZn
znUsed <- 272					## -- total number of highway zones actually used (includes 140) CSX Crete (zn 140) is included but not connected to network
pipeUsed <- 254					## -- total number of pipeline zones actually used (logistics nodes not included in pipeline network)
#Matrix formatting function####
## -- Function to read Emme binary matrix files and convert to usable data - highway
convertMatrix <- function(file1,maxnum,zones,zUsed) {
a <- readBin(file1, numeric(), n=maxnum, size=4)
a1 <- matrix(a, nrow=zones, ncol=zones)
a2 <- as.data.table(melt(a1))
setnames(a2, c("Var1","Var2"), c("q","p"))
a2 <- a2[p<=zUsed & q<=zUsed]				## -- remove unused zones
a2[p==zUsed, p:=399]						## -- re-label Mexico
a2[q==zUsed, q:=399]
a2[p==zUsed-1, p:=310]						## -- re-label Canada
a2[q==zUsed-1, q:=310]
## -- skims don't include Honolulu (179), Hawaii remainder (180) or CMAP zone in original FAF data (182)
a2[p>=zUsed-92 & p<=zUsed-2, p:=p+3L]
a2[q>=zUsed-92 & q<=zUsed-2, q:=q+3L]
a2[p==zUsed-93, p:=181]
a2[q==zUsed-93, q:=181]
a2 <- a2[p %in% c(1:132,151:178,181,183:273,310,399) & q %in% c(1:132,151:178,181,183:273,310,399)]
a2 <- a2[value>0 & value<99999]
a2[,value:=round(value, 1)]
a2
}
## -- Function to read Emme binary matrix files and convert to usable data - pipeline
convertPipeMatrix <- function(file1,maxnum,zones,zUsed) {
## -- no logistics nodes included
a <- readBin(file1, numeric(), n=maxnum, size=4)
a1 <- matrix(a, nrow=zones, ncol=zones)
a2 <- as.data.table(melt(a1))
setnames(a2, c("Var1","Var2"), c("q","p"))
a2 <- a2[p<=zUsed & q<=zUsed]				## -- remove unused zones
a2[p==zUsed, p:=399]						## -- re-label Mexico
a2[q==zUsed, q:=399]
a2[p==zUsed-1, p:=310]						## -- re-label Canada
a2[q==zUsed-1, q:=310]
## -- skims don't include Honolulu (179), Hawaii remainder (180) or CMAP zone in original FAF data (182)
a2[p>=zUsed-92 & p<=zUsed-2, p:=p+21L]
a2[q>=zUsed-92 & q<=zUsed-2, q:=q+21L]
a2[p==zUsed-93, p:=181]
a2[q==zUsed-93, q:=181]
a2[p>=zUsed-121 & p<=zUsed-94, p:=p+18L]
a2[q>=zUsed-121 & q<=zUsed-94, q:=q+18L]
a2 <- a2[p %in% c(1:132,151:178,181,183:273,310,399) & q %in% c(1:132,151:178,181,183:273,310,399)]
a2 <- a2[value>0 & value<99999]
a2[,value:=round(value, 1)]
a2
}
#LOAD DATA: Test Model####
setwd(testPath)
#EMME Matrices
## -- Highway Network --
for(mat in hwy_matrixIDs){
path = paste('Database/emmemat/mf', mat, ".emx", sep = "")
in1 <- convertMatrix(path, maxOb, maxZn, znUsed)
print(mat)
if(mat == 29){
setnames(in1, c("value"), c("new"))
new29 <- in1
}else if(mat == 31){
setnames(in1, c("value"), c("new"))
new31 <- in1
}else if(mat == 32){
setnames(in1, c("value"), c("new"))
new32 <- in1
}else if(mat == 33){
setnames(in1, c("value"), c("new"))
new33 <- in1
}else if(mat == 34){
setnames(in1, c("value"), c("new"))
new34 <- in1
}else if(mat == 40){
setnames(in1, c("value"), c("new"))
new40 <- in1
}else if(mat == 41){
setnames(in1, c("value"), c("new"))
new41 <- in1
}else if(mat == 61){
setnames(in1, c("value"), c("new"))
new61 <- in1
}else if(mat == 62){
setnames(in1, c("value"), c("new"))
new62 <- in1
}else if(mat == 63){
setnames(in1, c("value"), c("new"))
new63 <- in1
}else if(mat == 64){
setnames(in1, c("value"), c("new"))
new64 <- in1
}else if(mat == 65){
setnames(in1, c("value"), c("new"))
new65 <- in1
}else if(mat == 66){
setnames(in1, c("value"), c("new"))
new66 <- in1
}
}
## - Pipeline
for(mat in pipe_matrixIDs){
path = paste('Database/emmemat/mf', mat, ".emx", sep = "")
in1 <- convertPipeMatrix(path, maxOb, maxZn, pipeUsed)
print(mat)
if(mat == 71){
setnames(in1, c("value"), c("new"))
new71 <- in1
}else if(mat == 72){
setnames(in1, c("value"), c("new"))
new72 <- in1
}else if(mat == 73){
setnames(in1, c("value"), c("new"))
new73 <- in1
}else if(mat == 74){
setnames(in1, c("value"), c("new"))
new74 <- in1
}else if(mat == 75){
setnames(in1, c("value"), c("new"))
new75 <- in1
}else if(mat == 76){
setnames(in1, c("value"), c("new"))
new76 <- in1
}else if(mat == 80){
setnames(in1, c("value"), c("new"))
new80 <- in1
}
}
#LOAD DATA: Base Model####
setwd(basePath)
#EMME Matrices
## -- Highway Network --
for(mat in hwy_matrixIDs){
path = paste('Database/emmemat/mf', mat, ".emx", sep = "")
in1 <- convertMatrix(path, maxOb, maxZn, znUsed)
print(mat)
if(mat == 29){
setnames(in1, c("value"), c("old"))
old29 <- in1
}else if(mat == 31){
setnames(in1, c("value"), c("old"))
old31 <- in1
}else if(mat == 32){
setnames(in1, c("value"), c("old"))
old32 <- in1
}else if(mat == 33){
setnames(in1, c("value"), c("old"))
old33 <- in1
}else if(mat == 34){
setnames(in1, c("value"), c("old"))
old34 <- in1
}else if(mat == 40){
setnames(in1, c("value"), c("old"))
old40 <- in1
}else if(mat == 41){
setnames(in1, c("value"), c("old"))
old41 <- in1
}else if(mat == 61){
setnames(in1, c("value"), c("old"))
old61 <- in1
}else if(mat == 62){
setnames(in1, c("value"), c("old"))
old62 <- in1
}else if(mat == 63){
setnames(in1, c("value"), c("old"))
old63 <- in1
}else if(mat == 64){
setnames(in1, c("value"), c("old"))
old64 <- in1
}else if(mat == 65){
setnames(in1, c("value"), c("old"))
old65 <- in1
}else if(mat == 66){
setnames(in1, c("value"), c("old"))
old66 <- in1
}
}
## - Pipeline
for(mat in pipe_matrixIDs){
path = paste('Database/emmemat/mf', mat, ".emx", sep = "")
in1 <- convertPipeMatrix(path, maxOb, maxZn, pipeUsed)
print(mat)
if(mat == 71){
setnames(in1, c("value"), c("old"))
old71 <- in1
}else if(mat == 72){
setnames(in1, c("value"), c("old"))
old72 <- in1
}else if(mat == 73){
setnames(in1, c("value"), c("old"))
old73 <- in1
}else if(mat == 74){
setnames(in1, c("value"), c("old"))
old74 <- in1
}else if(mat == 75){
setnames(in1, c("value"), c("old"))
old75 <- in1
}else if(mat == 76){
setnames(in1, c("value"), c("old"))
old76 <- in1
}else if(mat == 80){
setnames(in1, c("value"), c("old"))
old80 <- in1
}
}
#Compare Matrices - Highway####
#Format matrices####
mat29 <- full_join(old29, new29, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat31 <- full_join(old31, new31, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat32 <- full_join(old32, new32, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat33 <- full_join(old33, new33, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat34 <- full_join(old34, new34, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat40 <- full_join(old40, new40, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat41 <- full_join(old41, new41, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat61 <- full_join(old61, new61, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat62 <- full_join(old62, new62, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat63 <- full_join(old63, new63, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat64 <- full_join(old64, new64, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat65 <- full_join(old65, new65, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
mat66 <- full_join(old66, new66, by = c("q", 'p')) %>% mutate(difference = new - old, percDiff = difference/new) %>% filter(difference != 0)
#Compare####
hw_compare_lst <- list(mat29, mat31, mat32, mat33, mat34, mat40, mat41, mat61, mat62, mat63, mat64, mat65, mat66)
hw_compare_name <- list("mat29", "mat31", "mat32", "mat33", "mat34", "mat40", "mat41", "mat61", "mat62", "mat63", "mat64", "mat65", "mat66")
i = 1
for(df in hw_compare_lst){
matrixName = hw_compare_name[i]
numrows = nrow(df)
print(paste(matrixName, ", ", numrows, " rows", sep = ""))
#  if(numrows > 0){
#    print(summary(df))
#  }
i = i+1
}
#**Compare Matrices - Pipeline####
#Format matrices####
mat71 <- full_join(old71, new71, by = c("q", 'p')) %>% mutate(difference = old - new) %>% filter(difference != 0)
mat72 <- full_join(old72, new72, by = c("q", 'p')) %>% mutate(difference = old - new) %>% filter(difference != 0)
mat73 <- full_join(old73, new73, by = c("q", 'p')) %>% mutate(difference = old - new) %>% filter(difference != 0)
mat74 <- full_join(old74, new74, by = c("q", 'p')) %>% mutate(difference = old - new) %>% filter(difference != 0)
mat75 <- full_join(old75, new75, by = c("q", 'p')) %>% mutate(difference = old - new) %>% filter(difference != 0)
mat76 <- full_join(old76, new76, by = c("q", 'p')) %>% mutate(difference = old - new) %>% filter(difference != 0)
mat80 <- full_join(old80, new80, by = c("q", 'p')) %>% mutate(difference = old - new) %>% filter(difference != 0)
#Compare####
pipe_compare_lst <- list(mat71, mat72, mat73, mat74, mat75, mat76, mat80)
pipe_compare_name <- list("mat71", "mat72", "mat73", "mat74", "mat75", "mat76", "mat80")
i = 1
for(df in pipe_compare_lst){
matrixName = pipe_compare_name[i]
numrows = nrow(df)
print(paste(matrixName, ", ", numrows, " rows", sep = ""))
#  if(numrows > 0){
#    print(summary(df))
#  }
i = i+1
}
